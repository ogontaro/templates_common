version: "3"

tasks:
  create:
    desc: create new project from template
    cmds:
      - |
        echo "プロジェクト名を入力してください"
        read PROJECT_NAME

        DEFAULT_REPO_URL="https://github.com/ogontaro/templates_${PROJECT_NAME}.git"
        echo "リポジトリのURLをデフォルト (${DEFAULT_REPO_URL}) で設定しますか？ [Y/n]"
        read -r use_default

        if [[ -z "$use_default" || "$use_default" =~ ^[Yy]$ ]]; then
          REPOSITORY_URL=$DEFAULT_REPO_URL
        else
          read -p "カスタムリポジトリのURLを入力してください: " REPOSITORY_URL
        fi

        # ユーザーが何も入力しなかった場合、デフォルト値を使用
        REPOSITORY_URL=${REPOSITORY_URL:-$DEFAULT_REPO_URL}

        copier copy --vcs-ref=main --data project_name=${PROJECT_NAME} https://github.com/ogontaro/templates_template.git templates/${PROJECT_NAME}
        mv templates/${PROJECT_NAME}/.copier-answers.yml answers/${PROJECT_NAME}.copier-answers.yml
        yq e ".templates.\"${PROJECT_NAME}\" = {\"template_path\": \"templates/${PROJECT_NAME}\", \"sync_target_repo\": \"${REPOSITORY_URL}\"}" -i .templates-sync.yml

        echo "${PROJECT_NAME} created";
  update:
    desc: update project from template
    cmds:
      - |
        echo "更新するプロジェクトを選択してください："
        select PROJECT_NAME in $(ls answers/*.copier-answers.yml | xargs -n 1 basename | sed 's/\.copier-answers\.//; s/\.yml//'); do
          if [ -n "$PROJECT_NAME" ]; then
            copier update --vcs-ref=main --skip-answered templates/${PROJECT_NAME} --answers-file ../../answers/${PROJECT_NAME}.copier-answers.yml
            echo "${PROJECT_NAME} を更新しました"
            break
          else
            echo "無効な選択です。もう一度お試しください。"
          fi
        done
        echo "${PROJECT_NAME} updated";
  test:
    desc: test project
    cmds:
      - |
        echo "テストするプロジェクト名を選択してください"
        select PROJECT_NAME in $(ls answers/*.copier-answers.yml | xargs -n 1 basename | sed 's/\.copier-answers\.yml//'); do
          if [ -n "$PROJECT_NAME" ]; then
            rm -rf test/${PROJECT_NAME}_test
            copier copy --data project_name=${PROJECT_NAME}_test --data github_runner_scale_set_name=${PROJECT_NAME}_test templates/${PROJECT_NAME} test/${PROJECT_NAME}_test
            break
          else
            echo "無効な選択です。もう一度お試しください。"
          fi
        done
  delete:
    desc: delete project
    cmds:
      - |
        echo "削除するプロジェクト名を選択してください"
        select PROJECT_NAME in $(ls answers/*.copier-answers.yml | xargs -n 1 basename | sed 's/\.copier-answers\.yml//'); do
          if [ -n "$PROJECT_NAME" ]; then
            rm -rf templates/${PROJECT_NAME}
            rm -rf answers/.copier-answers.${PROJECT_NAME}.yml
            yq e 'del(.templates.${PROJECT_NAME})' -i .templates-sync.yml
            echo "${PROJECT_NAME} deleted"
            break
          else
            echo "無効な選択です。もう一度お試しください。"
          fi
        done
  create:test:
    desc: test create new project from template
    cmds:
      - |
        copier copy --vcs-ref=main --data project_name=go https://github.com/ogontaro/templates_template.git templates/go
        yq e '.templates.go = {"template_path": "templates/go", "sync_target_repo": "https://github.com/ogontaro/templates_go.git"}' -i .templates-sync.yml
        mv templates/go/.copier-answers.yml answers/.copier-answers.go.yml
  update:test:
    desc: test update project from template
    cmds:
      - copier update --vcs-ref=main --skip-answered templates/go --answers-file ../../answers/.copier-answers.go.yml
  delete:test:
    desc: test delete project from template
    cmds:
      - rm -rf templates/go
      - rm -rf answers/.copier-answers.go.yml
      - yq e 'del(.templates.go)' -i .templates-sync.yml
